# Agent Configuration for AgAIle OS
# Defines specialized agents for development operations

version: "1.0"
project: "your-project-name"

# =============================================================================
# AGENT DEFINITIONS
# =============================================================================

agents:
  # Build & Error Resolution Specialist
  fixer-agent:
    description: "Resolves build errors, module issues, and development problems"
    confidence_threshold: 70
    capabilities:
      - error_pattern_recognition
      - cache_management
      - dependency_resolution
      - module_troubleshooting
    
    patterns:
      high_confidence:  # 85-100%
        - pattern: "Cannot find module"
          confidence: 92
          strategy: ["clear_cache", "reinstall_deps", "check_paths"]
        - pattern: "ENOENT.*no such file"
          confidence: 95
          strategy: ["verify_file", "check_permissions", "validate_path"]
      
      medium_confidence:  # 60-84%
        - pattern: "Type.*not assignable"
          confidence: 65
          strategy: ["regenerate_types", "check_schema", "manual_review"]
    
    approval_requirements:
      development: "NOTIFY"
      staging: "CONFIRM"
      production: "APPROVE"

  # Database & Migration Specialist
  db-migrate-agent:
    description: "Manages database schemas, migrations, and ORM synchronization"
    confidence_threshold: 75
    capabilities:
      - schema_synchronization
      - migration_generation
      - type_generation
      - rollback_management
    
    patterns:
      high_confidence:
        - pattern: "Prisma.*schema"
          confidence: 90
          strategy: ["sync_schema", "generate_client", "validate"]
        - pattern: "migration.*failed"
          confidence: 88
          strategy: ["analyze_error", "rollback", "retry"]
    
    approval_requirements:
      development: "CONFIRM"
      staging: "APPROVE"
      production: "MANUAL"

  # Code Quality Specialist
  quality-agent:
    description: "Ensures code quality, testing, and standards compliance"
    confidence_threshold: 60
    capabilities:
      - linting_cleanup
      - test_orchestration
      - coverage_analysis
      - accessibility_validation
    
    patterns:
      high_confidence:
        - pattern: "ESLint.*error"
          confidence: 85
          strategy: ["auto_fix", "validate", "commit"]
        - pattern: "test.*failed"
          confidence: 70
          strategy: ["analyze_failure", "update_test", "rerun"]
    
    approval_requirements:
      development: "NOTIFY"
      staging: "NOTIFY"
      production: "CONFIRM"

  # Deployment & CI/CD Specialist
  ci-cd-agent:
    description: "Manages deployments, pipelines, and environment orchestration"
    confidence_threshold: 85
    capabilities:
      - deployment_validation
      - pipeline_management
      - environment_sync
      - rollback_coordination
    
    patterns:
      high_confidence:
        - pattern: "build.*success"
          confidence: 100
          strategy: ["proceed_deploy", "validate_env", "monitor"]
        - pattern: "deployment.*failed"
          confidence: 95
          strategy: ["analyze_logs", "rollback", "notify"]
    
    approval_requirements:
      development: "NOTIFY"
      staging: "CONFIRM"
      production: "MANUAL"

  # Documentation Specialist
  docs-agent:
    description: "Manages documentation, knowledge extraction, and compliance"
    confidence_threshold: 50
    capabilities:
      - knowledge_extraction
      - documentation_generation
      - compliance_updates
      - api_documentation
    
    patterns:
      high_confidence:
        - pattern: "documentation.*outdated"
          confidence: 80
          strategy: ["extract_changes", "update_docs", "validate"]
        - pattern: "missing.*documentation"
          confidence: 75
          strategy: ["generate_docs", "review", "commit"]
    
    approval_requirements:
      development: "NOTIFY"
      staging: "NOTIFY"
      production: "NOTIFY"

# =============================================================================
# COORDINATION PATTERNS
# =============================================================================

coordination_patterns:
  # Multi-agent coordination for complex scenarios
  typescript_resolution:
    description: "Resolves TypeScript errors through coordinated agent action"
    phases:
      - agent: db-migrate-agent
        condition: "schema_related_errors"
        approval: "CONFIRM"
      - agent: fixer-agent
        condition: "build_errors"
        approval: "NOTIFY"
      - agent: quality-agent
        condition: "linting_errors"
        approval: "NOTIFY"
      - agent: ci-cd-agent
        condition: "always"
        approval: "CONFIRM"

  full_deployment:
    description: "Complete deployment pipeline with all validations"
    phases:
      - agent: quality-agent
        condition: "always"
        approval: "NOTIFY"
      - agent: ci-cd-agent
        condition: "tests_pass"
        approval: "CONFIRM"
      - agent: docs-agent
        condition: "deployment_success"
        approval: "NOTIFY"

# =============================================================================
# RISK ASSESSMENT
# =============================================================================

risk_assessment:
  agent_multipliers:
    fixer-agent: 1.0
    db-migrate-agent: 1.5
    quality-agent: 0.8
    ci-cd-agent: 1.8
    docs-agent: 0.6
  
  environment_multipliers:
    development: 0.7
    staging: 1.0
    production: 2.0
  
  thresholds:
    low_risk: 1.5      # Auto-execute
    medium_risk: 3.0   # Interactive approval
    high_risk: 5.0     # Manual review

# =============================================================================
# LEARNING CONFIGURATION
# =============================================================================

learning:
  enabled: true
  success_threshold: 0.9    # 90% success rate increases confidence
  failure_threshold: 0.6    # 60% failure rate decreases confidence
  confidence_adjustment: 0.05  # Â±5% adjustment per learning cycle
  minimum_samples: 3        # Minimum executions before adjustment

# =============================================================================
# NOTIFICATION SETTINGS
# =============================================================================

notifications:
  critical_issues:
    enabled: true
    channels: ["email", "slack"]
    escalation_time: 15  # minutes
  
  deployment_status:
    enabled: true
    channels: ["slack"]
  
  learning_updates:
    enabled: false
    channels: ["log"]

# =============================================================================
# EMERGENCY OVERRIDES
# =============================================================================

emergency:
  kill_switch: true
  rollback_enabled: true
  manual_override: "CTRL+C or --abort flag"
  audit_log: ".agaile-os/logs/emergency.log"
